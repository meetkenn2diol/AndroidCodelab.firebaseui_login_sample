plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //Kotling Parcelization plugin
    id 'kotlin-parcelize'
    //Room plugin
    id 'kotlin-kapt'
    //Navigation plugin for safeargs-kotlin
    id 'androidx.navigation.safeargs.kotlin'
    //Dagger plugin
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    defaultConfig {
        applicationId "com.google.samples.apps.dependencies"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        //important to reduce app size when using vector Images

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        // Consult the README on instructions for setting up Unsplash API key
        buildConfigField("String", "UNSPLASH_ACCESS_KEY", "\"" + getUnsplashAccess() + "\"")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        // work-runtime-ktx 2.1.0 and above now requires Java 8
        jvmTarget = "1.8"

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }
    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}


dependencies {
    //region ::: Android legacy support
    implementation fileTree(dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //endregion
    //region :::Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    //endregion
    //region :::Testing
    androidTestImplementation "androidx.arch.core:core-testing:$coreTesting_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomator_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    //endregion
    //region :::Android Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$corektx_version"
    //endregion
    //region :::AppCompat
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    //endregion
    //region :::Material Design
    implementation "com.google.android.material:material:$material_version"
    //endregion
    //region :::Constraintlayout
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"
    //endregion
    //region :::Room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    //endregion
    //region :::=Lifecycle management =
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleCompose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //endregion
    //region :::RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    //endregion
    //region :::SquareUp libraries
    //region :::Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2_version"
    //endregion
    //region :::Gson dependencies
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    //endregion
    //region :::Mock dependencies
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit2_version"
    //endregion
    //region :::Okhttp3 dependencies
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Logging_version"
    //endregion
    //endregion
    //region :::WorkManager
    implementation "android.arch.work:work-runtime:1.0.1"
    implementation "androidx.work:work-runtime:$work_version"
    //endregion
    //region :::Browser
    implementation "androidx.browser:browser:$androidxBrowser_version"
    //endregion
    //region :::NAVIGATION GRAPH DEPENDENCIES
    implementation "androidx.navigation:navigation-compose:$navCompose_version"
    //endregion
    //region::: Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //endregion
    //region::: Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    //endregion
    //region :::Activity
    implementation "androidx.activity:activity-ktx:$androidxActivity_version"
    //endregion
    //region :::FRAGMENT FUNCTIONALITY
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    //endregion
    //region :::PAGING DEPENDENCIES
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"
    //endregion
    //region :::PREFERENCES DEPENDENCIES=
    implementation "androidx.preference:preference:$preference_version"
    implementation "androidx.preference:preference-ktx:$preference_version"
    //endregion
    //region :::GLIDE DEPENDENCIES=
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "jp.co.cyberagent.android:gpuimage:$cyberagent_version"
    implementation "jp.wasabeef:glide-transformations:$glide_transf_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    //endregion
    //region ::: Dagger dependencies
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    //endregion
    //region :::Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    //endregion
    //region :::=ViewPager2
    implementation "androidx.viewpager2:viewpager2:$viewPager_version"
    //endregion
}

def getUnsplashAccess() {
    return project.findProperty("unsplash_access_key")
}